{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/triviadrome/src/pages/Admin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Admin() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [messagesOut, setMessagesOut] = useState([]);\n  const [selectedUser, setSelectedUser] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState('');\n  const [joinedUsers, setJoinedUsers] = useState([]);\n  const sockets = io('http://localhost:3001');\n  useEffect(() => {\n    const socket = io('http://localhost:3001');\n    socket.emit('getJoinedUsers');\n    socket.on('joinedUsers', users => {\n      setJoinedUsers(users);\n      console.log(users);\n    });\n    socket.on('adminMessage', data => {\n      console.log('Received message:', data);\n      const {\n        userId,\n        message\n      } = data;\n      console.log(data);\n      // Check the type of userId and message\n      console.log(typeof data.userId, typeof data.message);\n      // Update the messages state with the new message\n      setMessages(prevMessages => [...prevMessages, {\n        userId,\n        message\n      }]);\n    });\n    return () => {\n      // socket.off('joinedUsers');\n      // Clean up the socket connection\n      socket.disconnect();\n    };\n  }, []);\n  const handleUserSelect = (user, userId) => {\n    setSelectedUser(user);\n    setSelectedUserId(userId);\n  };\n\n  // Handle message change\n  const handleMessageChange = event => {\n    setMessagesOut(event.target.value);\n  };\n\n  // Handle sending message to the selected user\n  const handleSendMessage = () => {\n    if (selectedUser && messagesOut) {\n      sockets.emit('adminMessageOut', {\n        id: selectedUserId,\n        username: selectedUser,\n        messagesOut\n      });\n      setMessagesOut('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"User \", message.userId, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), message.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select a User:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), joinedUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleUserSelect(user.username, user.id),\n        style: {\n          cursor: 'pointer'\n        },\n        children: user.username\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Send Message:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected User: \", selectedUser]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: messagesOut,\n        onChange: handleMessageChange,\n        placeholder: \"Enter your message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Admin, \"phGOP3xm20k4g309hnsZ24rhfCg=\");\n_c = Admin;\n;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","Admin","_s","messages","setMessages","messagesOut","setMessagesOut","selectedUser","setSelectedUser","selectedUserId","setSelectedUserId","joinedUsers","setJoinedUsers","sockets","socket","emit","on","users","console","log","data","userId","message","prevMessages","disconnect","handleUserSelect","user","handleMessageChange","event","target","value","handleSendMessage","id","username","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","style","cursor","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/triviadrome/src/pages/Admin.jsx"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\n\n\n\nfunction Admin() {\n  const [messages, setMessages] = useState([]);\n  const [messagesOut, setMessagesOut] = useState([]);\n  const [selectedUser, setSelectedUser] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState('');\n  const [joinedUsers, setJoinedUsers] = useState([]);\n\n  const sockets = io('http://localhost:3001');\n  useEffect(() => {\n    const socket = io('http://localhost:3001');\n    socket.emit('getJoinedUsers');\n\n    socket.on('joinedUsers', (users) => {\n      setJoinedUsers(users);\n      console.log(users);\n    });\n\n\n    socket.on('adminMessage', (data) => {\n      console.log('Received message:', data);\n      const { userId, message } = data;\n      console.log(data);\n      // Check the type of userId and message\n      console.log(typeof data.userId, typeof data.message);\n      // Update the messages state with the new message\n      setMessages((prevMessages) => [...prevMessages, { userId, message }]);\n    });\n\n    return () => {\n      // socket.off('joinedUsers');\n      // Clean up the socket connection\n      socket.disconnect();\n    };\n  }, []);\n\n  const handleUserSelect = (user,userId) => {\n    setSelectedUser(user);\n    setSelectedUserId(userId);\n  };\n\n  // Handle message change\n  const handleMessageChange = (event) => {\n    setMessagesOut(event.target.value);\n  };\n\n  // Handle sending message to the selected user\n  const handleSendMessage = () => {\n  \n    if (selectedUser && messagesOut) {\n      sockets.emit('adminMessageOut', { id: selectedUserId, username: selectedUser, messagesOut });\n      setMessagesOut('');\n    }\n  };\n\n  \n\n  return (\n    <div>\n      <h1>Admin Component</h1>\n      <ul>\n        {messages.map((message, index) => (\n          <li key={index}>\n            <strong>User {message.userId}: </strong>\n            {message.message}\n          </li>\n        ))}\n      </ul>\n\n      <div>\n        <h3>Select a User:</h3>\n        {/* Map through the joined users and render clickable divs */}\n        {joinedUsers.map((user, index) => (\n    <div\n      key={index}\n            onClick={() => handleUserSelect(user.username, user.id)}\n            style={{ cursor: 'pointer' }}\n          >\n            {user.username}\n          </div>\n        ))}\n      </div>\n\n      <div>\n        <h3>Send Message:</h3>\n        {/* Display selected user information */}\n        {selectedUser && <p>Selected User: {selectedUser}</p>}\n        {/* Input field for message */}\n        <input\n          type=\"text\"\n          value={messagesOut}\n          onChange={handleMessageChange}\n          placeholder=\"Enter your message\"\n        />\n        {/* Button to send message */}\n        <button onClick={handleSendMessage}>Send Message</button>\n      </div>\n    \n    </div>\n  );\n};\n\nexport default Admin\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}