{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/triviadrome/src/pages/Admin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Admin() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [messagesOut, setMessagesOut] = useState([]);\n  const [selectedUser, setSelectedUser] = useState('');\n  const [joinedUsers, setJoinedUsers] = useState([]);\n  const [selectedUserId, setSelectedUserId] = useState('');\n  const sockets = io('http://localhost:3001');\n  useEffect(() => {\n    const socket = io('http://localhost:3001');\n    socket.emit('getJoinedUsers');\n    console.log(joinedUsers);\n    socket.on('joinedUsers', users => {\n      setJoinedUsers(users);\n    });\n    socket.on('adminMessage', data => {\n      console.log('Received message:', data);\n      const {\n        userId,\n        message\n      } = data;\n      console.log(data);\n      // Check the type of userId and message\n      console.log(typeof data.userId, typeof data.message);\n      // Update the messages state with the new message\n      setMessages(prevMessages => [...prevMessages, {\n        userId,\n        message\n      }]);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const handleUserSelect = (user, userId) => {\n    setSelectedUser(user);\n    setSelectedUserId(userId);\n  };\n  const handleMessageChange = event => {\n    setMessagesOut(event.target.value);\n  };\n\n  // Handle sending message to the selected user\n  const handleSendMessage = () => {\n    if (selectedUser) {\n      socket.emit('adminMessageOut', {\n        id: selectedUserId,\n        username: selectedUser,\n        messagesOut\n      });\n      setMessagesOut('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/4 bg-gray-200 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl mb-4\",\n        children: \"Joined Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: joinedUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `cursor-pointer p-2 mb-2 ${user.username === selectedUser ? 'bg-blue-500 text-white' : 'bg-white'}`,\n          onClick: () => handleUserSelect(user.username),\n          children: user.username\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl mb-4\",\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), selectedUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg mb-2\",\n          children: [\"Selected User: \", selectedUser]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 h-80 overflow-y-auto\",\n          children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"User \", message.userId, \": \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this), message.message]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: messagesOut,\n            onChange: handleMessageChange,\n            className: \"p-2 border rounded mr-2\",\n            placeholder: \"Enter your message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n            children: \"Send Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No user selected.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Admin, \"Wdf1Vtd6DUSbaOwp+FAfJGdH6wg=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","Admin","_s","messages","setMessages","messagesOut","setMessagesOut","selectedUser","setSelectedUser","joinedUsers","setJoinedUsers","selectedUserId","setSelectedUserId","sockets","socket","emit","console","log","on","users","data","userId","message","prevMessages","disconnect","handleUserSelect","user","handleMessageChange","event","target","value","handleSendMessage","id","username","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","index","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/triviadrome/src/pages/Admin.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\n\nfunction Admin() {\n  const [messages, setMessages] = useState([]);\n  const [messagesOut, setMessagesOut] = useState([]);\n  const [selectedUser, setSelectedUser] = useState('');\n  const [joinedUsers, setJoinedUsers] = useState([]);\n  const [selectedUserId, setSelectedUserId] = useState('');\n\n  const sockets = io('http://localhost:3001');\n  useEffect(() => {\n    const socket = io('http://localhost:3001');\n    socket.emit('getJoinedUsers');\n    console.log(joinedUsers);\n    socket.on('joinedUsers', (users) => {\n      setJoinedUsers(users);\n    });\n\n       socket.on('adminMessage', (data) => {\n      console.log('Received message:', data);\n      const { userId, message } = data;\n      console.log(data);\n      // Check the type of userId and message\n      console.log(typeof data.userId, typeof data.message);\n      // Update the messages state with the new message\n      setMessages((prevMessages) => [...prevMessages, { userId, message }]);\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const handleUserSelect = (user,userId) => {\n    setSelectedUser(user);\n    setSelectedUserId(userId);\n  };\n\n  const handleMessageChange = (event) => {\n    setMessagesOut(event.target.value);\n  };\n\n    // Handle sending message to the selected user\n    const handleSendMessage = () => {\n  \n      if (selectedUser) {\n        socket.emit('adminMessageOut', { id: selectedUserId, username: selectedUser, messagesOut });\n        setMessagesOut('');\n      }\n    };\n\n  return (\n    <div className=\"flex\">\n      <div className=\"w-1/4 bg-gray-200 p-4\">\n        <h3 className=\"text-xl mb-4\">Joined Users</h3>\n        <ul>\n          {joinedUsers.map((user) => (\n            <li\n              key={user.id}\n              className={`cursor-pointer p-2 mb-2 ${\n                user.username === selectedUser ? 'bg-blue-500 text-white' : 'bg-white'\n              }`}\n              onClick={() => handleUserSelect(user.username)}\n            >\n              {user.username}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"flex-1 p-4\">\n        <h3 className=\"text-xl mb-4\">Chat</h3>\n        {selectedUser ? (\n          <div>\n            <h4 className=\"text-lg mb-2\">Selected User: {selectedUser}</h4>\n            <div className=\"bg-white p-4 h-80 overflow-y-auto\">\n              {messages.map((message, index) => (\n                <div key={index} className=\"mb-2\">\n                  <strong>User {message.userId}: </strong>\n                  {message.message}\n                </div>\n              ))}\n            </div>\n            <div className=\"mt-4\">\n              <input\n                type=\"text\"\n                value={messagesOut}\n                onChange={handleMessageChange}\n                className=\"p-2 border rounded mr-2\"\n                placeholder=\"Enter your message\"\n              />\n              <button\n                onClick={handleSendMessage}\n                className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n              >\n                Send Message\n              </button>\n            </div>\n          </div>\n        ) : (\n          <p>No user selected.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Admin;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}