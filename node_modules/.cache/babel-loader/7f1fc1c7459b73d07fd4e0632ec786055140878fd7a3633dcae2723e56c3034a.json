{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/triviadrome/src/pages/Admin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Admin() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [messagesOut, setMessagesOut] = useState([]);\n  const [selectedUser, setSelectedUser] = useState('');\n  const [joinedUsers, setJoinedUsers] = useState([]);\n  const [selectedUserId, setSelectedUserId] = useState('');\n  const sockets = io('http://localhost:3001');\n  useEffect(() => {\n    const socket = io('http://localhost:3001');\n    socket.emit('getJoinedUsers');\n    socket.on('joinedUsers', users => {\n      const updatedUsers = users.filter(user => user.username); // Filter out users without a username\n      setJoinedUsers(prevUsers => {\n        const mergedUsers = prevUsers.map(prevUser => {\n          const existingUser = updatedUsers.find(user => user.id === prevUser.id);\n          if (existingUser) {\n            // Merge messages for existing user\n            return {\n              ...existingUser,\n              messages: [...prevUser.messages, ...existingUser.messages]\n            };\n          }\n          return prevUser;\n        });\n        const newUsers = updatedUsers.filter(user => !mergedUsers.find(prevUser => prevUser.id === user.id));\n        return [...mergedUsers, ...newUsers];\n      });\n    });\n    socket.on('adminMessage', data => {\n      console.log('Received message:', data);\n      const {\n        userId,\n        message\n      } = data;\n      console.log(data);\n      // Check the type of userId and message\n      console.log(typeof data.userId, typeof data.message);\n      // Update the messages state with the new message\n      setMessages(prevMessages => [...prevMessages, {\n        userId,\n        message\n      }]);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const handleUserSelect = (user, userId) => {\n    setSelectedUser(user);\n    setSelectedUserId(userId);\n  };\n  const handleMessageChange = event => {\n    setMessagesOut(event.target.value);\n  };\n\n  // Handle sending message to the selected user\n  const handleSendMessage = () => {\n    if (selectedUser) {\n      sockets.emit('adminMessageOut', {\n        id: selectedUserId,\n        username: selectedUser,\n        messagesOut\n      });\n      setMessagesOut('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/4 bg-gray-200 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl mb-4\",\n        children: \"Joined Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: joinedUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `cursor-pointer p-2 mb-2 ${user.username === selectedUser ? 'bg-blue-500 text-white' : 'bg-white'}`,\n          onClick: () => handleUserSelect(user.username),\n          children: user.username\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl mb-4\",\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), selectedUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg mb-2\",\n          children: [\"Selected User: \", selectedUser]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 h-80 overflow-y-auto\",\n          children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"User \", message.userId, \": \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this), message.message]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: messagesOut,\n            onChange: handleMessageChange,\n            className: \"p-2 border rounded mr-2\",\n            placeholder: \"Enter your message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n            children: \"Send Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No user selected.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Admin, \"Wdf1Vtd6DUSbaOwp+FAfJGdH6wg=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","Admin","_s","messages","setMessages","messagesOut","setMessagesOut","selectedUser","setSelectedUser","joinedUsers","setJoinedUsers","selectedUserId","setSelectedUserId","sockets","socket","emit","on","users","updatedUsers","filter","user","username","prevUsers","mergedUsers","map","prevUser","existingUser","find","id","newUsers","data","console","log","userId","message","prevMessages","disconnect","handleUserSelect","handleMessageChange","event","target","value","handleSendMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","index","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/triviadrome/src/pages/Admin.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\n\nfunction Admin() {\n  const [messages, setMessages] = useState([]);\n  const [messagesOut, setMessagesOut] = useState([]);\n  const [selectedUser, setSelectedUser] = useState('');\n  const [joinedUsers, setJoinedUsers] = useState([]);\n  const [selectedUserId, setSelectedUserId] = useState('');\n\n  const sockets = io('http://localhost:3001');\n  useEffect(() => {\n    const socket = io('http://localhost:3001');\n    socket.emit('getJoinedUsers');\n    \n    socket.on('joinedUsers', (users) => {\n      const updatedUsers = users.filter((user) => user.username); // Filter out users without a username\n      setJoinedUsers((prevUsers) => {\n        const mergedUsers = prevUsers.map((prevUser) => {\n          const existingUser = updatedUsers.find((user) => user.id === prevUser.id);\n          if (existingUser) {\n            // Merge messages for existing user\n            return {\n              ...existingUser,\n              messages: [...prevUser.messages, ...existingUser.messages],\n            };\n          }\n          return prevUser;\n        });\n        const newUsers = updatedUsers.filter(\n          (user) => !mergedUsers.find((prevUser) => prevUser.id === user.id)\n        );\n        return [...mergedUsers, ...newUsers];\n      });\n    });\n\n       socket.on('adminMessage', (data) => {\n      console.log('Received message:', data);\n      const { userId, message } = data;\n      console.log(data);\n      // Check the type of userId and message\n      console.log(typeof data.userId, typeof data.message);\n      // Update the messages state with the new message\n      setMessages((prevMessages) => [...prevMessages, { userId, message }]);\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const handleUserSelect = (user,userId) => {\n    setSelectedUser(user);\n    setSelectedUserId(userId);\n  };\n\n  const handleMessageChange = (event) => {\n    setMessagesOut(event.target.value);\n  };\n\n    // Handle sending message to the selected user\n    const handleSendMessage = () => {\n  \n      if (selectedUser) {\n        sockets.emit('adminMessageOut', { id: selectedUserId, username: selectedUser, messagesOut });\n        setMessagesOut('');\n      }\n    };\n\n  return (\n    <div className=\"flex\">\n      <div className=\"w-1/4 bg-gray-200 p-4\">\n        <h3 className=\"text-xl mb-4\">Joined Users</h3>\n        <ul>\n          {joinedUsers.map((user) => (\n            <li\n              key={user.id}\n              className={`cursor-pointer p-2 mb-2 ${\n                user.username === selectedUser ? 'bg-blue-500 text-white' : 'bg-white'\n              }`}\n              onClick={() => handleUserSelect(user.username)}\n            >\n              {user.username}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"flex-1 p-4\">\n        <h3 className=\"text-xl mb-4\">Chat</h3>\n        {selectedUser ? (\n          <div>\n            <h4 className=\"text-lg mb-2\">Selected User: {selectedUser}</h4>\n            <div className=\"bg-white p-4 h-80 overflow-y-auto\">\n              {messages.map((message, index) => (\n                <div key={index} className=\"mb-2\">\n                  <strong>User {message.userId}: </strong>\n                  {message.message}\n                </div>\n              ))}\n            </div>\n            <div className=\"mt-4\">\n              <input\n                type=\"text\"\n                value={messagesOut}\n                onChange={handleMessageChange}\n                className=\"p-2 border rounded mr-2\"\n                placeholder=\"Enter your message\"\n              />\n              <button\n                onClick={handleSendMessage}\n                className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n              >\n                Send Message\n              </button>\n            </div>\n          </div>\n        ) : (\n          <p>No user selected.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Admin;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMiB,OAAO,GAAGf,EAAE,CAAC,uBAAuB,CAAC;EAC3CD,SAAS,CAAC,MAAM;IACd,MAAMiB,MAAM,GAAGhB,EAAE,CAAC,uBAAuB,CAAC;IAC1CgB,MAAM,CAACC,IAAI,CAAC,gBAAgB,CAAC;IAE7BD,MAAM,CAACE,EAAE,CAAC,aAAa,EAAGC,KAAK,IAAK;MAClC,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC;MAC5DX,cAAc,CAAEY,SAAS,IAAK;QAC5B,MAAMC,WAAW,GAAGD,SAAS,CAACE,GAAG,CAAEC,QAAQ,IAAK;UAC9C,MAAMC,YAAY,GAAGR,YAAY,CAACS,IAAI,CAAEP,IAAI,IAAKA,IAAI,CAACQ,EAAE,KAAKH,QAAQ,CAACG,EAAE,CAAC;UACzE,IAAIF,YAAY,EAAE;YAChB;YACA,OAAO;cACL,GAAGA,YAAY;cACfvB,QAAQ,EAAE,CAAC,GAAGsB,QAAQ,CAACtB,QAAQ,EAAE,GAAGuB,YAAY,CAACvB,QAAQ;YAC3D,CAAC;UACH;UACA,OAAOsB,QAAQ;QACjB,CAAC,CAAC;QACF,MAAMI,QAAQ,GAAGX,YAAY,CAACC,MAAM,CACjCC,IAAI,IAAK,CAACG,WAAW,CAACI,IAAI,CAAEF,QAAQ,IAAKA,QAAQ,CAACG,EAAE,KAAKR,IAAI,CAACQ,EAAE,CACnE,CAAC;QACD,OAAO,CAAC,GAAGL,WAAW,EAAE,GAAGM,QAAQ,CAAC;MACtC,CAAC,CAAC;IACJ,CAAC,CAAC;IAECf,MAAM,CAACE,EAAE,CAAC,cAAc,EAAGc,IAAI,IAAK;MACrCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,IAAI,CAAC;MACtC,MAAM;QAAEG,MAAM;QAAEC;MAAQ,CAAC,GAAGJ,IAAI;MAChCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB;MACAC,OAAO,CAACC,GAAG,CAAC,OAAOF,IAAI,CAACG,MAAM,EAAE,OAAOH,IAAI,CAACI,OAAO,CAAC;MACpD;MACA9B,WAAW,CAAE+B,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE;QAAEF,MAAM;QAAEC;MAAQ,CAAC,CAAC,CAAC;IACvE,CAAC,CAAC;IAEF,OAAO,MAAM;MACXpB,MAAM,CAACsB,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,gBAAgB,GAAGA,CAACjB,IAAI,EAACa,MAAM,KAAK;IACxCzB,eAAe,CAACY,IAAI,CAAC;IACrBR,iBAAiB,CAACqB,MAAM,CAAC;EAC3B,CAAC;EAED,MAAMK,mBAAmB,GAAIC,KAAK,IAAK;IACrCjC,cAAc,CAACiC,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;;EAEC;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAE9B,IAAInC,YAAY,EAAE;MAChBM,OAAO,CAACE,IAAI,CAAC,iBAAiB,EAAE;QAAEa,EAAE,EAAEjB,cAAc;QAAEU,QAAQ,EAAEd,YAAY;QAAEF;MAAY,CAAC,CAAC;MAC5FC,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;EAEH,oBACEN,OAAA;IAAK2C,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnB5C,OAAA;MAAK2C,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACpC5C,OAAA;QAAI2C,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9ChD,OAAA;QAAA4C,QAAA,EACGnC,WAAW,CAACe,GAAG,CAAEJ,IAAI,iBACpBpB,OAAA;UAEE2C,SAAS,EAAG,2BACVvB,IAAI,CAACC,QAAQ,KAAKd,YAAY,GAAG,wBAAwB,GAAG,UAC7D,EAAE;UACH0C,OAAO,EAAEA,CAAA,KAAMZ,gBAAgB,CAACjB,IAAI,CAACC,QAAQ,CAAE;UAAAuB,QAAA,EAE9CxB,IAAI,CAACC;QAAQ,GANTD,IAAI,CAACQ,EAAE;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAENhD,OAAA;MAAK2C,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzB5C,OAAA;QAAI2C,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACrCzC,YAAY,gBACXP,OAAA;QAAA4C,QAAA,gBACE5C,OAAA;UAAI2C,SAAS,EAAC,cAAc;UAAAC,QAAA,GAAC,iBAAe,EAACrC,YAAY;QAAA;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC/DhD,OAAA;UAAK2C,SAAS,EAAC,mCAAmC;UAAAC,QAAA,EAC/CzC,QAAQ,CAACqB,GAAG,CAAC,CAACU,OAAO,EAAEgB,KAAK,kBAC3BlD,OAAA;YAAiB2C,SAAS,EAAC,MAAM;YAAAC,QAAA,gBAC/B5C,OAAA;cAAA4C,QAAA,GAAQ,OAAK,EAACV,OAAO,CAACD,MAAM,EAAC,IAAE;YAAA;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACvCd,OAAO,CAACA,OAAO;UAAA,GAFRgB,KAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGV,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNhD,OAAA;UAAK2C,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnB5C,OAAA;YACEmD,IAAI,EAAC,MAAM;YACXV,KAAK,EAAEpC,WAAY;YACnB+C,QAAQ,EAAEd,mBAAoB;YAC9BK,SAAS,EAAC,yBAAyB;YACnCU,WAAW,EAAC;UAAoB;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC,eACFhD,OAAA;YACEiD,OAAO,EAAEP,iBAAkB;YAC3BC,SAAS,EAAC,4DAA4D;YAAAC,QAAA,EACvE;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,gBAENhD,OAAA;QAAA4C,QAAA,EAAG;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACxB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC9C,EAAA,CAxHQD,KAAK;AAAAqD,EAAA,GAALrD,KAAK;AA0Hd,eAAeA,KAAK;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}