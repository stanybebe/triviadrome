{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/triviadrome/src/pages/Admin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Admin() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [messagesOut, setMessagesOut] = useState([]);\n  const [adminOut, setAdminOut] = useState([]);\n  const [selectedUser, setSelectedUser] = useState('');\n  const [joinedUsers, setJoinedUsers] = useState([]);\n  const [selectedUserId, setSelectedUserId] = useState('');\n  const sockets = io('http://localhost:3001');\n  useEffect(() => {\n    const socket = io('http://localhost:3001');\n    socket.emit('getJoinedUsers');\n    socket.on('joinedUsers', users => {\n      const uniqueUsernames = new Set();\n      const filteredUsers = users.filter(user => {\n        if (!uniqueUsernames.has(user.username) && user.username) {\n          uniqueUsernames.add(user.username);\n          return true;\n        }\n        return false;\n      });\n      setJoinedUsers(filteredUsers);\n    });\n    socket.on('adminMessage', data => {\n      console.log('Received message:', data);\n      const {\n        userId,\n        message\n      } = data;\n      console.log(data);\n      // Check the type of userId and message\n      console.log(typeof data.userId, typeof data.message);\n      // Update the messages state with the new message\n      setMessages(prevMessages => [...prevMessages, {\n        userId,\n        message\n      }]);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const handleUserSelect = (user, userId) => {\n    setSelectedUser(user);\n    setSelectedUserId(userId);\n  };\n  const handleMessageChange = event => {\n    setMessagesOut(event.target.value);\n  };\n\n  // Handle sending message to the selected user\n  const handleSendMessage = () => {\n    if (selectedUser) {\n      console.log(adminOut);\n      sockets.emit('adminMessageOut', {\n        id: selectedUserId,\n        username: selectedUser.username,\n        messagesOut\n      });\n      setMessagesOut('');\n    }\n    const outmes = {\n      username: selectedUser.username,\n      messagesOut\n    };\n    setAdminOut(prevAdminOut => [...prevAdminOut, {\n      outmes\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/4 bg-gray-200 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl mb-4\",\n        children: \"Joined Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: joinedUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `cursor-pointer p-2 mb-2 ${user.username === selectedUser ? 'bg-blue-500 text-white' : 'bg-white'}`,\n          onClick: () => handleUserSelect(user.username),\n          children: user.username\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl mb-4\",\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), selectedUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg mb-2\",\n          children: [\"Selected User: \", selectedUser]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 h-80 overflow-y-auto\",\n          children: [messages.map((message, index) => {\n            if (message.userId === selectedUser) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"User \", message.userId, \": \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this), message.message]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this);\n            }\n          }), adminOut.map((admes, index) => {\n            if (admes.username === selectedUser) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Admin: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 9\n                }, this), admes.messagesOut]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 7\n              }, this);\n            }\n            return null; // Add this line to skip rendering admin messages that don't match the selected user\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: messagesOut,\n            onChange: handleMessageChange,\n            className: \"p-2 border rounded mr-2\",\n            placeholder: \"Enter your message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n            children: \"Send Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No user selected.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Admin, \"UsNguUg6eU3EJLcYoT0F7173BUo=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","Admin","_s","messages","setMessages","messagesOut","setMessagesOut","adminOut","setAdminOut","selectedUser","setSelectedUser","joinedUsers","setJoinedUsers","selectedUserId","setSelectedUserId","sockets","socket","emit","on","users","uniqueUsernames","Set","filteredUsers","filter","user","has","username","add","data","console","log","userId","message","prevMessages","disconnect","handleUserSelect","handleMessageChange","event","target","value","handleSendMessage","id","outmes","prevAdminOut","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","index","admes","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/mac/Documents/GitHub/triviadrome/src/pages/Admin.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\n\nfunction Admin() {\n  const [messages, setMessages] = useState([]);\n  const [messagesOut, setMessagesOut] = useState([]);\n  const [adminOut, setAdminOut] = useState([]);\n  const [selectedUser, setSelectedUser] = useState('');\n  const [joinedUsers, setJoinedUsers] = useState([]);\n  const [selectedUserId, setSelectedUserId] = useState('');\n\n  const sockets = io('http://localhost:3001');\n\n\n  useEffect(() => {\n    const socket = io('http://localhost:3001');\n    socket.emit('getJoinedUsers');\n    \nsocket.on('joinedUsers', (users) => {\n  const uniqueUsernames = new Set();\n  const filteredUsers = users.filter((user) => {\n    if (!uniqueUsernames.has(user.username) && user.username) {\n      uniqueUsernames.add(user.username);\n      return true;\n    }\n    return false;\n  });\n  setJoinedUsers(filteredUsers);\n});\n\n       socket.on('adminMessage', (data) => {\n      console.log('Received message:', data);\n      const { userId, message } = data;\n      console.log(data);\n      // Check the type of userId and message\n      console.log(typeof data.userId, typeof data.message);\n      // Update the messages state with the new message\n      setMessages((prevMessages) => [...prevMessages, { userId, message }]);\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const handleUserSelect = (user,userId) => {\n    setSelectedUser(user);\n    setSelectedUserId(userId);\n  };\n\n  const handleMessageChange = (event) => {\n    setMessagesOut(event.target.value);\n  };\n\n    // Handle sending message to the selected user\n    const handleSendMessage = () => {\n  \n      if (selectedUser){\n \n        console.log(adminOut);\n        sockets.emit('adminMessageOut', { id: selectedUserId, username: selectedUser.username, messagesOut });\n        setMessagesOut('');\n    \n      }\n\n      const outmes = {\n        username: selectedUser.username, messagesOut\n      }\n      setAdminOut((prevAdminOut) => [\n        ...prevAdminOut,\n        {outmes},\n      ]);\n    };\n\n  return (\n    <div className=\"flex\">\n      <div className=\"w-1/4 bg-gray-200 p-4\">\n        <h3 className=\"text-xl mb-4\">Joined Users</h3>\n        <ul>\n          {joinedUsers.map((user) => (\n            <li\n              key={user.id}\n              className={`cursor-pointer p-2 mb-2 ${\n                user.username === selectedUser ? 'bg-blue-500 text-white' : 'bg-white'\n              }`}\n              onClick={() => handleUserSelect(user.username)}\n            >\n              {user.username}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"flex-1 p-4\">\n        <h3 className=\"text-xl mb-4\">Chat</h3>\n        {selectedUser ? (\n          <div>\n            <h4 className=\"text-lg mb-2\">Selected User: {selectedUser}</h4>\n            <div className=\"bg-white p-4 h-80 overflow-y-auto\">\n              {messages.map((message, index) => {\n                if(message.userId===selectedUser){\n                  return(\n                    <div key={index} className=\"mb-2\">\n                    <strong>User {message.userId}: </strong>\n                    {message.message}\n                  </div>\n                  );\n                }\n             \n                 })}\n     {adminOut.map((admes, index) => {\n  if (admes.username === selectedUser) {\n    return (\n      <div key={index} className=\"mb-2\">\n        <strong>Admin: </strong>\n        {admes.messagesOut}\n      </div>\n    );\n  }\n  return null; // Add this line to skip rendering admin messages that don't match the selected user\n})}\n\n              \n\n                 \n            </div>\n            <div className=\"mt-4\">\n              <input\n                type=\"text\"\n                value={messagesOut}\n                onChange={handleMessageChange}\n                className=\"p-2 border rounded mr-2\"\n                placeholder=\"Enter your message\"\n              />\n              <button\n                onClick={handleSendMessage}\n                className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n              >\n                Send Message\n              </button>\n            </div>\n          </div>\n        ) : (\n          <p>No user selected.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Admin;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}